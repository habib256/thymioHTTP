/// <reference types="flatbuffers" />
/**
 * The Type of a node
 * A node can designate either a robot, a simulator, each with various capabilities.
 *
 * @enum
 */
export declare namespace mobsya.fb {
    enum NodeType {
        Thymio2 = 0,
        Thymio2Wireless = 1,
        SimulatedThymio2 = 2,
        DummyNode = 3,
        UnknownType = 4
    }
}
/**
 * Capabilities of a node
 * What a client can do with a node may depends on permissions, firmware version, type of node/device, etc
 *
 * @enum
 */
export declare namespace mobsya.fb {
    enum NodeCapability {
        Rename = 1,
        ForceResetAndStop = 2,
        FirwmareUpgrade = 4
    }
}
/**
 * The status of a node represents whether the node is connected and available.
 *
 * @enum
 */
export declare namespace mobsya.fb {
    enum NodeStatus {
        /**
         * The status is unknown, this denotes a programmation error or a bug
         */
        unknown = 0,
        /**
         * The node is just connected. However, sending code or requesting a VM desciption is unspecified in this state
         */
        connected = 1,
        /**
         * The node is available. It needs to be sent a LockNode message before any action that would mutate it state, such as sending code can take place
         */
        available = 2,
        /**
         * The node is busy - this will be sent to all clients, except the one who locked the node
         */
        busy = 3,
        /**
         * The node is ready - this will be sent the client that optained a lock on the node
         */
        ready = 4,
        /**
         * The node is disconnected. Any reference to it will be destroyed on the server side, and sending further messages to it will fail
         */
        disconnected = 5
    }
}
/**
 * @enum
 */
export declare namespace mobsya.fb {
    enum ErrorType {
        no_error = 0,
        /**
         * Genric error
         */
        unknown_error = 1,
        /**
         * The node ddoes not exist or was disconnected
         */
        unknown_node = 2,
        /**
         * The node is busy (locked by another client)
         */
        node_busy = 3,
        /**
         *Unsuported variable type - For SetVariables and Events
         */
        unsupported_variable_type = 4,
        thymio2_pairing_write_dongle_failed = 5,
        thymio2_pairing_write_robot_failed = 6
    }
}
/**
 * @enum
 */
export declare namespace mobsya.fb {
    enum WatchableInfo {
        StopMonitoring = 0,
        Variables = 1,
        Events = 2,
        VMExecutionState = 4,
        SharedEventsDescription = 8,
        SharedVariables = 16,
        Scratchpads = 32
    }
}
/**
 * @enum
 */
export declare namespace mobsya.fb {
    enum ProgrammingLanguage {
        Aseba = 1,
        Aesl = 2
    }
}
/**
 * @enum
 */
export declare namespace mobsya.fb {
    enum CompilationOptions {
        NoOption = 1,
        LoadOnTarget = 2,
        FetchBytecode = 4
    }
}
/**
 * @enum
 */
export declare namespace mobsya.fb {
    enum VMExecutionStateCommand {
        Stop = 0,
        Run = 1,
        Step = 2,
        StepToNextLine = 3,
        Pause = 4,
        Reset = 5,
        Reboot = 6,
        Suspend = 7,
        WriteProgramToDeviceMemory = 8
    }
}
/**
 * @enum
 */
export declare namespace mobsya.fb {
    enum VMExecutionState {
        Stopped = 0,
        Running = 1,
        Paused = 2
    }
}
/**
 * @enum
 */
export declare namespace mobsya.fb {
    enum VMExecutionError {
        NoError = 0,
        Killed = 1,
        OutOfBoundAccess = 2,
        DivisionByZero = 3,
        GenericError = 4
    }
}
/**
 * @enum
 */
export declare namespace mobsya.fb {
    enum AnyMessage {
        NONE = 0,
        ConnectionHandshake = 1,
        DeviceManagerShutdownRequest = 2,
        RequestListOfNodes = 3,
        RequestNodeAsebaVMDescription = 4,
        LockNode = 5,
        UnlockNode = 6,
        RenameNode = 7,
        CompileAndLoadCodeOnVM = 8,
        NodesChanged = 9,
        NodeAsebaVMDescription = 10,
        RequestCompleted = 11,
        Error = 12,
        CompilationResultFailure = 13,
        CompilationResultSuccess = 14,
        WatchNode = 15,
        VariablesChanged = 16,
        SetVariables = 17,
        EventsDescriptionsChanged = 18,
        RegisterEvents = 19,
        SendEvents = 20,
        EventsEmitted = 21,
        SetBreakpoints = 22,
        SetBreakpointsResponse = 23,
        SetVMExecutionState = 24,
        VMExecutionStateChanged = 25,
        ScratchpadUpdate = 26,
        FirmwareUpgradeRequest = 27,
        FirmwareUpgradeStatus = 28,
        Ping = 29,
        EnableThymio2PairingMode = 30,
        Thymio2WirelessDonglesChanged = 31,
        Thymio2WirelessDonglePairingRequest = 32,
        Thymio2WirelessDonglePairingResponse = 33
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class ConnectionHandshake {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns ConnectionHandshake
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): ConnectionHandshake;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param ConnectionHandshake= obj
         * @returns ConnectionHandshake
         */
        static getRootAsConnectionHandshake(bb: flatbuffers.ByteBuffer, obj?: ConnectionHandshake): ConnectionHandshake;
        /**
         * @returns number
         */
        minProtocolVersion(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_minProtocolVersion(value: number): boolean;
        /**
         * @returns number
         */
        protocolVersion(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_protocolVersion(value: number): boolean;
        /**
         * @returns number
         */
        maxMessageSize(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_maxMessageSize(value: number): boolean;
        /**
         * @param number index
         * @returns number
         */
        token(index: number): number | null;
        /**
         * @returns number
         */
        tokenLength(): number;
        /**
         * @returns Uint8Array
         */
        tokenArray(): Uint8Array | null;
        /**
         * @returns boolean
         */
        localhostPeer(): boolean;
        /**
         * @param boolean value
         * @returns boolean
         */
        mutate_localhostPeer(value: boolean): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startConnectionHandshake(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number minProtocolVersion
         */
        static addMinProtocolVersion(builder: flatbuffers.Builder, minProtocolVersion: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number protocolVersion
         */
        static addProtocolVersion(builder: flatbuffers.Builder, protocolVersion: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number maxMessageSize
         */
        static addMaxMessageSize(builder: flatbuffers.Builder, maxMessageSize: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset tokenOffset
         */
        static addToken(builder: flatbuffers.Builder, tokenOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<number> data
         * @returns flatbuffers.Offset
         */
        static createTokenVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startTokenVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param boolean localhostPeer
         */
        static addLocalhostPeer(builder: flatbuffers.Builder, localhostPeer: boolean): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endConnectionHandshake(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createConnectionHandshake(builder: flatbuffers.Builder, minProtocolVersion: number, protocolVersion: number, maxMessageSize: number, tokenOffset: flatbuffers.Offset, localhostPeer: boolean): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class Ping {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Ping
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Ping;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Ping= obj
         * @returns Ping
         */
        static getRootAsPing(bb: flatbuffers.ByteBuffer, obj?: Ping): Ping;
        /**
         * @param flatbuffers.Builder builder
         */
        static startPing(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endPing(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createPing(builder: flatbuffers.Builder): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class DeviceManagerShutdownRequest {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns DeviceManagerShutdownRequest
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): DeviceManagerShutdownRequest;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param DeviceManagerShutdownRequest= obj
         * @returns DeviceManagerShutdownRequest
         */
        static getRootAsDeviceManagerShutdownRequest(bb: flatbuffers.ByteBuffer, obj?: DeviceManagerShutdownRequest): DeviceManagerShutdownRequest;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startDeviceManagerShutdownRequest(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endDeviceManagerShutdownRequest(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createDeviceManagerShutdownRequest(builder: flatbuffers.Builder, requestId: number): flatbuffers.Offset;
    }
}
/**
 *A node id
 *
 * @constructor
 */
export declare namespace mobsya.fb {
    class NodeId {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns NodeId
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): NodeId;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param NodeId= obj
         * @returns NodeId
         */
        static getRootAsNodeId(bb: flatbuffers.ByteBuffer, obj?: NodeId): NodeId;
        /**
         * @param number index
         * @returns number
         */
        id(index: number): number | null;
        /**
         * @returns number
         */
        idLength(): number;
        /**
         * @returns Uint8Array
         */
        idArray(): Uint8Array | null;
        /**
         * @param flatbuffers.Builder builder
         */
        static startNodeId(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset idOffset
         */
        static addId(builder: flatbuffers.Builder, idOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<number> data
         * @returns flatbuffers.Offset
         */
        static createIdVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startIdVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endNodeId(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createNodeId(builder: flatbuffers.Builder, idOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * Represent a node
 *
 * @constructor
 */
export declare namespace mobsya.fb {
    class Node {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Node
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Node;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Node= obj
         * @returns Node
         */
        static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        groupId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @returns mobsya.fb.NodeStatus
         */
        status(): mobsya.fb.NodeStatus;
        /**
         * @param mobsya.fb.NodeStatus value
         * @returns boolean
         */
        mutate_status(value: mobsya.fb.NodeStatus): boolean;
        /**
         * @returns mobsya.fb.NodeType
         */
        type(): mobsya.fb.NodeType;
        /**
         * @param mobsya.fb.NodeType value
         * @returns boolean
         */
        mutate_type(value: mobsya.fb.NodeType): boolean;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        name(): string | null;
        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @returns flatbuffers.Long
         */
        capabilities(): flatbuffers.Long;
        /**
         * @param flatbuffers.Long value
         * @returns boolean
         */
        mutate_capabilities(value: flatbuffers.Long): boolean;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        fwVersion(): string | null;
        fwVersion(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        latestFwVersion(): string | null;
        latestFwVersion(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @param flatbuffers.Builder builder
         */
        static startNode(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset groupIdOffset
         */
        static addGroupId(builder: flatbuffers.Builder, groupIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param mobsya.fb.NodeStatus status
         */
        static addStatus(builder: flatbuffers.Builder, status: mobsya.fb.NodeStatus): void;
        /**
         * @param flatbuffers.Builder builder
         * @param mobsya.fb.NodeType type
         */
        static addType(builder: flatbuffers.Builder, type: mobsya.fb.NodeType): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nameOffset
         */
        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Long capabilities
         */
        static addCapabilities(builder: flatbuffers.Builder, capabilities: flatbuffers.Long): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset fwVersionOffset
         */
        static addFwVersion(builder: flatbuffers.Builder, fwVersionOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset latestFwVersionOffset
         */
        static addLatestFwVersion(builder: flatbuffers.Builder, latestFwVersionOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endNode(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createNode(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset, groupIdOffset: flatbuffers.Offset, status: mobsya.fb.NodeStatus, type: mobsya.fb.NodeType, nameOffset: flatbuffers.Offset, capabilities: flatbuffers.Long, fwVersionOffset: flatbuffers.Offset, latestFwVersionOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class NamedValue {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns NamedValue
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): NamedValue;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param NamedValue= obj
         * @returns NamedValue
         */
        static getRootAsNamedValue(bb: flatbuffers.ByteBuffer, obj?: NamedValue): NamedValue;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        name(): string | null;
        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @param number index
         * @returns number
         */
        value(index: number): number | null;
        /**
         * @returns number
         */
        valueLength(): number;
        /**
         * @returns Uint8Array
         */
        valueArray(): Uint8Array | null;
        /**
         * @param flatbuffers.Builder builder
         */
        static startNamedValue(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nameOffset
         */
        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset valueOffset
         */
        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<number> data
         * @returns flatbuffers.Offset
         */
        static createValueVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startValueVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endNamedValue(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createNamedValue(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class NodeVariable {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns NodeVariable
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): NodeVariable;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param NodeVariable= obj
         * @returns NodeVariable
         */
        static getRootAsNodeVariable(bb: flatbuffers.ByteBuffer, obj?: NodeVariable): NodeVariable;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        name(): string | null;
        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @param number index
         * @returns number
         */
        value(index: number): number | null;
        /**
         * @returns number
         */
        valueLength(): number;
        /**
         * @returns Uint8Array
         */
        valueArray(): Uint8Array | null;
        /**
         * @param flatbuffers.Builder builder
         */
        static startNodeVariable(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nameOffset
         */
        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset valueOffset
         */
        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<number> data
         * @returns flatbuffers.Offset
         */
        static createValueVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startValueVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endNodeVariable(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createNodeVariable(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class VariablesChanged {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns VariablesChanged
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): VariablesChanged;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param VariablesChanged= obj
         * @returns VariablesChanged
         */
        static getRootAsVariablesChanged(bb: flatbuffers.ByteBuffer, obj?: VariablesChanged): VariablesChanged;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param number index
         * @param mobsya.fb.NodeVariable= obj
         * @returns mobsya.fb.NodeVariable
         */
        vars(index: number, obj?: mobsya.fb.NodeVariable): mobsya.fb.NodeVariable | null;
        /**
         * @returns number
         */
        varsLength(): number;
        /**
         * unix timestamp ( miliseconds) of when the variables were modified - or 0 if unspecified
         *
         * @returns flatbuffers.Long
         */
        timestamp(): flatbuffers.Long;
        /**
         * @param flatbuffers.Long value
         * @returns boolean
         */
        mutate_timestamp(value: flatbuffers.Long): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startVariablesChanged(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset varsOffset
         */
        static addVars(builder: flatbuffers.Builder, varsOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createVarsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startVarsVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Long timestamp
         */
        static addTimestamp(builder: flatbuffers.Builder, timestamp: flatbuffers.Long): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endVariablesChanged(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createVariablesChanged(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset, varsOffset: flatbuffers.Offset, timestamp: flatbuffers.Long): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class SendEvents {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns SendEvents
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): SendEvents;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param SendEvents= obj
         * @returns SendEvents
         */
        static getRootAsSendEvents(bb: flatbuffers.ByteBuffer, obj?: SendEvents): SendEvents;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param number index
         * @param mobsya.fb.NamedValue= obj
         * @returns mobsya.fb.NamedValue
         */
        events(index: number, obj?: mobsya.fb.NamedValue): mobsya.fb.NamedValue | null;
        /**
         * @returns number
         */
        eventsLength(): number;
        /**
         * @param flatbuffers.Builder builder
         */
        static startSendEvents(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset eventsOffset
         */
        static addEvents(builder: flatbuffers.Builder, eventsOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createEventsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startEventsVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endSendEvents(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createSendEvents(builder: flatbuffers.Builder, requestId: number, nodeIdOffset: flatbuffers.Offset, eventsOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class EventsEmitted {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns EventsEmitted
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): EventsEmitted;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param EventsEmitted= obj
         * @returns EventsEmitted
         */
        static getRootAsEventsEmitted(bb: flatbuffers.ByteBuffer, obj?: EventsEmitted): EventsEmitted;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param number index
         * @param mobsya.fb.NamedValue= obj
         * @returns mobsya.fb.NamedValue
         */
        events(index: number, obj?: mobsya.fb.NamedValue): mobsya.fb.NamedValue | null;
        /**
         * @returns number
         */
        eventsLength(): number;
        /**
         * unix timestamp ( miliseconds) of when the events were emitted - or 0 if unspecified
         *
         * @returns flatbuffers.Long
         */
        timestamp(): flatbuffers.Long;
        /**
         * @param flatbuffers.Long value
         * @returns boolean
         */
        mutate_timestamp(value: flatbuffers.Long): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startEventsEmitted(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset eventsOffset
         */
        static addEvents(builder: flatbuffers.Builder, eventsOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createEventsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startEventsVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Long timestamp
         */
        static addTimestamp(builder: flatbuffers.Builder, timestamp: flatbuffers.Long): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endEventsEmitted(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createEventsEmitted(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset, eventsOffset: flatbuffers.Offset, timestamp: flatbuffers.Long): flatbuffers.Offset;
    }
}
/**
 * Message sent by the server when a node changes status.
 * This messages is automatically sent when the application first connects and each time one or more node change status
 *
 * @constructor
 */
export declare namespace mobsya.fb {
    class NodesChanged {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns NodesChanged
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): NodesChanged;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param NodesChanged= obj
         * @returns NodesChanged
         */
        static getRootAsNodesChanged(bb: flatbuffers.ByteBuffer, obj?: NodesChanged): NodesChanged;
        /**
         * Nodes whose status changed. it's up to the client to maintain a list of all nodes.
         *
         * @param number index
         * @param mobsya.fb.Node= obj
         * @returns mobsya.fb.Node
         */
        nodes(index: number, obj?: mobsya.fb.Node): mobsya.fb.Node | null;
        /**
         * @returns number
         */
        nodesLength(): number;
        /**
         * @param flatbuffers.Builder builder
         */
        static startNodesChanged(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodesOffset
         */
        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startNodesVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endNodesChanged(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createNodesChanged(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * Ask the server to send a list of all nodes
 * The server will send back a NodesChanged message containing infos on all nodes
 *
 * @constructor
 */
export declare namespace mobsya.fb {
    class RequestListOfNodes {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns RequestListOfNodes
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): RequestListOfNodes;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param RequestListOfNodes= obj
         * @returns RequestListOfNodes
         */
        static getRootAsRequestListOfNodes(bb: flatbuffers.ByteBuffer, obj?: RequestListOfNodes): RequestListOfNodes;
        /**
         * @param flatbuffers.Builder builder
         */
        static startRequestListOfNodes(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endRequestListOfNodes(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createRequestListOfNodes(builder: flatbuffers.Builder): flatbuffers.Offset;
    }
}
/**
 * Request the server to send a NodeAsebaVMDescription for the node corresponding to node_id
 *
 * @constructor
 */
export declare namespace mobsya.fb {
    class RequestNodeAsebaVMDescription {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns RequestNodeAsebaVMDescription
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): RequestNodeAsebaVMDescription;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param RequestNodeAsebaVMDescription= obj
         * @returns RequestNodeAsebaVMDescription
         */
        static getRootAsRequestNodeAsebaVMDescription(bb: flatbuffers.ByteBuffer, obj?: RequestNodeAsebaVMDescription): RequestNodeAsebaVMDescription;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param flatbuffers.Builder builder
         */
        static startRequestNodeAsebaVMDescription(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endRequestNodeAsebaVMDescription(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createRequestNodeAsebaVMDescription(builder: flatbuffers.Builder, requestId: number, nodeIdOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * The description of an Aseba VM, sent in response to a RequestNodeAsebaVMDescription
 *
 * @constructor
 */
export declare namespace mobsya.fb {
    class NodeAsebaVMDescription {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns NodeAsebaVMDescription
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): NodeAsebaVMDescription;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param NodeAsebaVMDescription= obj
         * @returns NodeAsebaVMDescription
         */
        static getRootAsNodeAsebaVMDescription(bb: flatbuffers.ByteBuffer, obj?: NodeAsebaVMDescription): NodeAsebaVMDescription;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @returns number
         */
        bytecodeSize(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_bytecode_size(value: number): boolean;
        /**
         * @returns number
         */
        dataSize(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_data_size(value: number): boolean;
        /**
         * @returns number
         */
        stackSize(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_stack_size(value: number): boolean;
        /**
         * @param number index
         * @param mobsya.fb.AsebaNamedVariable= obj
         * @returns mobsya.fb.AsebaNamedVariable
         */
        variables(index: number, obj?: mobsya.fb.AsebaNamedVariable): mobsya.fb.AsebaNamedVariable | null;
        /**
         * @returns number
         */
        variablesLength(): number;
        /**
         * @param number index
         * @param mobsya.fb.AsebaEvent= obj
         * @returns mobsya.fb.AsebaEvent
         */
        events(index: number, obj?: mobsya.fb.AsebaEvent): mobsya.fb.AsebaEvent | null;
        /**
         * @returns number
         */
        eventsLength(): number;
        /**
         * @param number index
         * @param mobsya.fb.AsebaNativeFunction= obj
         * @returns mobsya.fb.AsebaNativeFunction
         */
        functions(index: number, obj?: mobsya.fb.AsebaNativeFunction): mobsya.fb.AsebaNativeFunction | null;
        /**
         * @returns number
         */
        functionsLength(): number;
        /**
         * @param flatbuffers.Builder builder
         */
        static startNodeAsebaVMDescription(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number bytecodeSize
         */
        static addBytecodeSize(builder: flatbuffers.Builder, bytecodeSize: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number dataSize
         */
        static addDataSize(builder: flatbuffers.Builder, dataSize: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number stackSize
         */
        static addStackSize(builder: flatbuffers.Builder, stackSize: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset variablesOffset
         */
        static addVariables(builder: flatbuffers.Builder, variablesOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createVariablesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startVariablesVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset eventsOffset
         */
        static addEvents(builder: flatbuffers.Builder, eventsOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createEventsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startEventsVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset functionsOffset
         */
        static addFunctions(builder: flatbuffers.Builder, functionsOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createFunctionsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startFunctionsVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endNodeAsebaVMDescription(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createNodeAsebaVMDescription(builder: flatbuffers.Builder, requestId: number, nodeIdOffset: flatbuffers.Offset, bytecodeSize: number, dataSize: number, stackSize: number, variablesOffset: flatbuffers.Offset, eventsOffset: flatbuffers.Offset, functionsOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class AsebaNamedVariable {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns AsebaNamedVariable
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): AsebaNamedVariable;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param AsebaNamedVariable= obj
         * @returns AsebaNamedVariable
         */
        static getRootAsAsebaNamedVariable(bb: flatbuffers.ByteBuffer, obj?: AsebaNamedVariable): AsebaNamedVariable;
        /**
         * @returns number
         */
        index(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_index(value: number): boolean;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        name(): string | null;
        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @returns number
         */
        size(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_size(value: number): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startAsebaNamedVariable(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number index
         */
        static addIndex(builder: flatbuffers.Builder, index: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nameOffset
         */
        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number size
         */
        static addSize(builder: flatbuffers.Builder, size: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endAsebaNamedVariable(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createAsebaNamedVariable(builder: flatbuffers.Builder, index: number, nameOffset: flatbuffers.Offset, size: number): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class AsebaEvent {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns AsebaEvent
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): AsebaEvent;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param AsebaEvent= obj
         * @returns AsebaEvent
         */
        static getRootAsAsebaEvent(bb: flatbuffers.ByteBuffer, obj?: AsebaEvent): AsebaEvent;
        /**
         * @returns number
         */
        index(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_index(value: number): boolean;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        name(): string | null;
        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        description(): string | null;
        description(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @param flatbuffers.Builder builder
         */
        static startAsebaEvent(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number index
         */
        static addIndex(builder: flatbuffers.Builder, index: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nameOffset
         */
        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset descriptionOffset
         */
        static addDescription(builder: flatbuffers.Builder, descriptionOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endAsebaEvent(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createAsebaEvent(builder: flatbuffers.Builder, index: number, nameOffset: flatbuffers.Offset, descriptionOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class AsebaNativeFunction {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns AsebaNativeFunction
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): AsebaNativeFunction;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param AsebaNativeFunction= obj
         * @returns AsebaNativeFunction
         */
        static getRootAsAsebaNativeFunction(bb: flatbuffers.ByteBuffer, obj?: AsebaNativeFunction): AsebaNativeFunction;
        /**
         * @returns number
         */
        index(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_index(value: number): boolean;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        name(): string | null;
        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        description(): string | null;
        description(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @param number index
         * @param mobsya.fb.AsebaNativeFunctionParameter= obj
         * @returns mobsya.fb.AsebaNativeFunctionParameter
         */
        parameters(index: number, obj?: mobsya.fb.AsebaNativeFunctionParameter): mobsya.fb.AsebaNativeFunctionParameter | null;
        /**
         * @returns number
         */
        parametersLength(): number;
        /**
         * @param flatbuffers.Builder builder
         */
        static startAsebaNativeFunction(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number index
         */
        static addIndex(builder: flatbuffers.Builder, index: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nameOffset
         */
        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset descriptionOffset
         */
        static addDescription(builder: flatbuffers.Builder, descriptionOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset parametersOffset
         */
        static addParameters(builder: flatbuffers.Builder, parametersOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createParametersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startParametersVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endAsebaNativeFunction(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createAsebaNativeFunction(builder: flatbuffers.Builder, index: number, nameOffset: flatbuffers.Offset, descriptionOffset: flatbuffers.Offset, parametersOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class AsebaNativeFunctionParameter {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns AsebaNativeFunctionParameter
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): AsebaNativeFunctionParameter;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param AsebaNativeFunctionParameter= obj
         * @returns AsebaNativeFunctionParameter
         */
        static getRootAsAsebaNativeFunctionParameter(bb: flatbuffers.ByteBuffer, obj?: AsebaNativeFunctionParameter): AsebaNativeFunctionParameter;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        name(): string | null;
        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @returns number
         */
        size(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_size(value: number): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startAsebaNativeFunctionParameter(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nameOffset
         */
        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number size
         */
        static addSize(builder: flatbuffers.Builder, size: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endAsebaNativeFunctionParameter(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createAsebaNativeFunctionParameter(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, size: number): flatbuffers.Offset;
    }
}
/**
 * Modify the value of specified variables
 *
 * @constructor
 */
export declare namespace mobsya.fb {
    class SetVariables {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns SetVariables
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): SetVariables;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param SetVariables= obj
         * @returns SetVariables
         */
        static getRootAsSetVariables(bb: flatbuffers.ByteBuffer, obj?: SetVariables): SetVariables;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeOrGroupId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param number index
         * @param mobsya.fb.NodeVariable= obj
         * @returns mobsya.fb.NodeVariable
         */
        vars(index: number, obj?: mobsya.fb.NodeVariable): mobsya.fb.NodeVariable | null;
        /**
         * @returns number
         */
        varsLength(): number;
        /**
         * @param flatbuffers.Builder builder
         */
        static startSetVariables(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeOrGroupIdOffset
         */
        static addNodeOrGroupId(builder: flatbuffers.Builder, nodeOrGroupIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset varsOffset
         */
        static addVars(builder: flatbuffers.Builder, varsOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createVarsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startVarsVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endSetVariables(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createSetVariables(builder: flatbuffers.Builder, requestId: number, nodeOrGroupIdOffset: flatbuffers.Offset, varsOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * Set a new name for this nùode
 *
 * @constructor
 */
export declare namespace mobsya.fb {
    class RenameNode {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns RenameNode
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): RenameNode;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param RenameNode= obj
         * @returns RenameNode
         */
        static getRootAsRenameNode(bb: flatbuffers.ByteBuffer, obj?: RenameNode): RenameNode;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        newName(): string | null;
        newName(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @param flatbuffers.Builder builder
         */
        static startRenameNode(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset newNameOffset
         */
        static addNewName(builder: flatbuffers.Builder, newNameOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endRenameNode(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createRenameNode(builder: flatbuffers.Builder, requestId: number, nodeIdOffset: flatbuffers.Offset, newNameOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * Ask the server to give this client sole ownership of the node.
 * This needs to be done once before sending mutating instructions to the node
 * The lock remain until the client disconnect, the device disconnect or a UnlockNode message is sent
 * Once locked, the node appears busy to all clients.
 *
 * @constructor
 */
export declare namespace mobsya.fb {
    class LockNode {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns LockNode
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): LockNode;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param LockNode= obj
         * @returns LockNode
         */
        static getRootAsLockNode(bb: flatbuffers.ByteBuffer, obj?: LockNode): LockNode;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param flatbuffers.Builder builder
         */
        static startLockNode(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endLockNode(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createLockNode(builder: flatbuffers.Builder, requestId: number, nodeIdOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * Unlock a device so that other client can use it.
 * Once unlocked, the node appears ready to all clients.
 *
 * @constructor
 */
export declare namespace mobsya.fb {
    class UnlockNode {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns UnlockNode
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): UnlockNode;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param UnlockNode= obj
         * @returns UnlockNode
         */
        static getRootAsUnlockNode(bb: flatbuffers.ByteBuffer, obj?: UnlockNode): UnlockNode;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param flatbuffers.Builder builder
         */
        static startUnlockNode(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endUnlockNode(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createUnlockNode(builder: flatbuffers.Builder, requestId: number, nodeIdOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class CompileAndLoadCodeOnVM {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns CompileAndLoadCodeOnVM
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): CompileAndLoadCodeOnVM;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param CompileAndLoadCodeOnVM= obj
         * @returns CompileAndLoadCodeOnVM
         */
        static getRootAsCompileAndLoadCodeOnVM(bb: flatbuffers.ByteBuffer, obj?: CompileAndLoadCodeOnVM): CompileAndLoadCodeOnVM;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @returns mobsya.fb.ProgrammingLanguage
         */
        language(): mobsya.fb.ProgrammingLanguage;
        /**
         * @param mobsya.fb.ProgrammingLanguage value
         * @returns boolean
         */
        mutate_language(value: mobsya.fb.ProgrammingLanguage): boolean;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        program(): string | null;
        program(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @returns mobsya.fb.CompilationOptions
         */
        options(): mobsya.fb.CompilationOptions;
        /**
         * @param mobsya.fb.CompilationOptions value
         * @returns boolean
         */
        mutate_options(value: mobsya.fb.CompilationOptions): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startCompileAndLoadCodeOnVM(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param mobsya.fb.ProgrammingLanguage language
         */
        static addLanguage(builder: flatbuffers.Builder, language: mobsya.fb.ProgrammingLanguage): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset programOffset
         */
        static addProgram(builder: flatbuffers.Builder, programOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param mobsya.fb.CompilationOptions options
         */
        static addOptions(builder: flatbuffers.Builder, options: mobsya.fb.CompilationOptions): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endCompileAndLoadCodeOnVM(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createCompileAndLoadCodeOnVM(builder: flatbuffers.Builder, requestId: number, nodeIdOffset: flatbuffers.Offset, language: mobsya.fb.ProgrammingLanguage, programOffset: flatbuffers.Offset, options: mobsya.fb.CompilationOptions): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class CompilationResultFailure {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns CompilationResultFailure
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): CompilationResultFailure;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param CompilationResultFailure= obj
         * @returns CompilationResultFailure
         */
        static getRootAsCompilationResultFailure(bb: flatbuffers.ByteBuffer, obj?: CompilationResultFailure): CompilationResultFailure;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        message(): string | null;
        message(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @returns number
         */
        character(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_character(value: number): boolean;
        /**
         * @returns number
         */
        line(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_line(value: number): boolean;
        /**
         * @returns number
         */
        column(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_column(value: number): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startCompilationResultFailure(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset messageOffset
         */
        static addMessage(builder: flatbuffers.Builder, messageOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number character
         */
        static addCharacter(builder: flatbuffers.Builder, character: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number line
         */
        static addLine(builder: flatbuffers.Builder, line: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number column
         */
        static addColumn(builder: flatbuffers.Builder, column: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endCompilationResultFailure(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createCompilationResultFailure(builder: flatbuffers.Builder, requestId: number, messageOffset: flatbuffers.Offset, character: number, line: number, column: number): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class CompilationResultSuccess {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns CompilationResultSuccess
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): CompilationResultSuccess;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param CompilationResultSuccess= obj
         * @returns CompilationResultSuccess
         */
        static getRootAsCompilationResultSuccess(bb: flatbuffers.ByteBuffer, obj?: CompilationResultSuccess): CompilationResultSuccess;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @returns number
         */
        bytecodeSize(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_bytecode_size(value: number): boolean;
        /**
         * @returns number
         */
        totalBytecodeSize(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_total_bytecode_size(value: number): boolean;
        /**
         * @returns number
         */
        variablesSize(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_variables_size(value: number): boolean;
        /**
         * @returns number
         */
        totalVariablesSize(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_total_variables_size(value: number): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startCompilationResultSuccess(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number bytecodeSize
         */
        static addBytecodeSize(builder: flatbuffers.Builder, bytecodeSize: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number totalBytecodeSize
         */
        static addTotalBytecodeSize(builder: flatbuffers.Builder, totalBytecodeSize: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number variablesSize
         */
        static addVariablesSize(builder: flatbuffers.Builder, variablesSize: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number totalVariablesSize
         */
        static addTotalVariablesSize(builder: flatbuffers.Builder, totalVariablesSize: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endCompilationResultSuccess(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createCompilationResultSuccess(builder: flatbuffers.Builder, requestId: number, bytecodeSize: number, totalBytecodeSize: number, variablesSize: number, totalVariablesSize: number): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class SetVMExecutionState {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns SetVMExecutionState
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): SetVMExecutionState;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param SetVMExecutionState= obj
         * @returns SetVMExecutionState
         */
        static getRootAsSetVMExecutionState(bb: flatbuffers.ByteBuffer, obj?: SetVMExecutionState): SetVMExecutionState;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @returns mobsya.fb.VMExecutionStateCommand
         */
        command(): mobsya.fb.VMExecutionStateCommand;
        /**
         * @param mobsya.fb.VMExecutionStateCommand value
         * @returns boolean
         */
        mutate_command(value: mobsya.fb.VMExecutionStateCommand): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startSetVMExecutionState(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param mobsya.fb.VMExecutionStateCommand command
         */
        static addCommand(builder: flatbuffers.Builder, command: mobsya.fb.VMExecutionStateCommand): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endSetVMExecutionState(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createSetVMExecutionState(builder: flatbuffers.Builder, requestId: number, nodeIdOffset: flatbuffers.Offset, command: mobsya.fb.VMExecutionStateCommand): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class VMExecutionStateChanged {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns VMExecutionStateChanged
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): VMExecutionStateChanged;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param VMExecutionStateChanged= obj
         * @returns VMExecutionStateChanged
         */
        static getRootAsVMExecutionStateChanged(bb: flatbuffers.ByteBuffer, obj?: VMExecutionStateChanged): VMExecutionStateChanged;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @returns mobsya.fb.VMExecutionState
         */
        state(): mobsya.fb.VMExecutionState;
        /**
         * @param mobsya.fb.VMExecutionState value
         * @returns boolean
         */
        mutate_state(value: mobsya.fb.VMExecutionState): boolean;
        /**
         * @returns number
         */
        line(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_line(value: number): boolean;
        /**
         * @returns mobsya.fb.VMExecutionError
         */
        error(): mobsya.fb.VMExecutionError;
        /**
         * @param mobsya.fb.VMExecutionError value
         * @returns boolean
         */
        mutate_error(value: mobsya.fb.VMExecutionError): boolean;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        errorMsg(): string | null;
        errorMsg(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @param flatbuffers.Builder builder
         */
        static startVMExecutionStateChanged(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param mobsya.fb.VMExecutionState state
         */
        static addState(builder: flatbuffers.Builder, state: mobsya.fb.VMExecutionState): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number line
         */
        static addLine(builder: flatbuffers.Builder, line: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param mobsya.fb.VMExecutionError error
         */
        static addError(builder: flatbuffers.Builder, error: mobsya.fb.VMExecutionError): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset errorMsgOffset
         */
        static addErrorMsg(builder: flatbuffers.Builder, errorMsgOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endVMExecutionStateChanged(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createVMExecutionStateChanged(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset, state: mobsya.fb.VMExecutionState, line: number, error: mobsya.fb.VMExecutionError, errorMsgOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class Breakpoint {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Breakpoint
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Breakpoint;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Breakpoint= obj
         * @returns Breakpoint
         */
        static getRootAsBreakpoint(bb: flatbuffers.ByteBuffer, obj?: Breakpoint): Breakpoint;
        /**
         * @returns number
         */
        line(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_line(value: number): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startBreakpoint(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number line
         */
        static addLine(builder: flatbuffers.Builder, line: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endBreakpoint(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createBreakpoint(builder: flatbuffers.Builder, line: number): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class SetBreakpoints {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns SetBreakpoints
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): SetBreakpoints;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param SetBreakpoints= obj
         * @returns SetBreakpoints
         */
        static getRootAsSetBreakpoints(bb: flatbuffers.ByteBuffer, obj?: SetBreakpoints): SetBreakpoints;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param number index
         * @param mobsya.fb.Breakpoint= obj
         * @returns mobsya.fb.Breakpoint
         */
        breakpoints(index: number, obj?: mobsya.fb.Breakpoint): mobsya.fb.Breakpoint | null;
        /**
         * @returns number
         */
        breakpointsLength(): number;
        /**
         * @param flatbuffers.Builder builder
         */
        static startSetBreakpoints(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset breakpointsOffset
         */
        static addBreakpoints(builder: flatbuffers.Builder, breakpointsOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createBreakpointsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startBreakpointsVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endSetBreakpoints(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createSetBreakpoints(builder: flatbuffers.Builder, requestId: number, nodeIdOffset: flatbuffers.Offset, breakpointsOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class SetBreakpointsResponse {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns SetBreakpointsResponse
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): SetBreakpointsResponse;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param SetBreakpointsResponse= obj
         * @returns SetBreakpointsResponse
         */
        static getRootAsSetBreakpointsResponse(bb: flatbuffers.ByteBuffer, obj?: SetBreakpointsResponse): SetBreakpointsResponse;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @returns mobsya.fb.ErrorType
         */
        error(): mobsya.fb.ErrorType;
        /**
         * @param mobsya.fb.ErrorType value
         * @returns boolean
         */
        mutate_error(value: mobsya.fb.ErrorType): boolean;
        /**
         * @param number index
         * @param mobsya.fb.Breakpoint= obj
         * @returns mobsya.fb.Breakpoint
         */
        breakpoints(index: number, obj?: mobsya.fb.Breakpoint): mobsya.fb.Breakpoint | null;
        /**
         * @returns number
         */
        breakpointsLength(): number;
        /**
         * @param flatbuffers.Builder builder
         */
        static startSetBreakpointsResponse(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param mobsya.fb.ErrorType error
         */
        static addError(builder: flatbuffers.Builder, error: mobsya.fb.ErrorType): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset breakpointsOffset
         */
        static addBreakpoints(builder: flatbuffers.Builder, breakpointsOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createBreakpointsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startBreakpointsVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endSetBreakpointsResponse(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createSetBreakpointsResponse(builder: flatbuffers.Builder, requestId: number, error: mobsya.fb.ErrorType, breakpointsOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class WatchNode {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns WatchNode
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): WatchNode;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param WatchNode= obj
         * @returns WatchNode
         */
        static getRootAsWatchNode(bb: flatbuffers.ByteBuffer, obj?: WatchNode): WatchNode;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeOrGroupId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @returns number
         */
        infoType(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_info_type(value: number): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startWatchNode(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeOrGroupIdOffset
         */
        static addNodeOrGroupId(builder: flatbuffers.Builder, nodeOrGroupIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number infoType
         */
        static addInfoType(builder: flatbuffers.Builder, infoType: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endWatchNode(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createWatchNode(builder: flatbuffers.Builder, requestId: number, nodeOrGroupIdOffset: flatbuffers.Offset, infoType: number): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class Error {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Error
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Error;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Error= obj
         * @returns Error
         */
        static getRootAsError(bb: flatbuffers.ByteBuffer, obj?: Error): Error;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @returns mobsya.fb.ErrorType
         */
        error(): mobsya.fb.ErrorType;
        /**
         * @param mobsya.fb.ErrorType value
         * @returns boolean
         */
        mutate_error(value: mobsya.fb.ErrorType): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startError(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param mobsya.fb.ErrorType error
         */
        static addError(builder: flatbuffers.Builder, error: mobsya.fb.ErrorType): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endError(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createError(builder: flatbuffers.Builder, requestId: number, error: mobsya.fb.ErrorType): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class RequestCompleted {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns RequestCompleted
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): RequestCompleted;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param RequestCompleted= obj
         * @returns RequestCompleted
         */
        static getRootAsRequestCompleted(bb: flatbuffers.ByteBuffer, obj?: RequestCompleted): RequestCompleted;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startRequestCompleted(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endRequestCompleted(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createRequestCompleted(builder: flatbuffers.Builder, requestId: number): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class EventDescription {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns EventDescription
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): EventDescription;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param EventDescription= obj
         * @returns EventDescription
         */
        static getRootAsEventDescription(bb: flatbuffers.ByteBuffer, obj?: EventDescription): EventDescription;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        name(): string | null;
        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @returns number
         */
        fixedSized(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_fixed_sized(value: number): boolean;
        /**
         * @returns number
         */
        index(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_index(value: number): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startEventDescription(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nameOffset
         */
        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number fixedSized
         */
        static addFixedSized(builder: flatbuffers.Builder, fixedSized: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number index
         */
        static addIndex(builder: flatbuffers.Builder, index: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endEventDescription(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createEventDescription(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, fixedSized: number, index: number): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class RegisterEvents {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns RegisterEvents
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): RegisterEvents;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param RegisterEvents= obj
         * @returns RegisterEvents
         */
        static getRootAsRegisterEvents(bb: flatbuffers.ByteBuffer, obj?: RegisterEvents): RegisterEvents;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeOrGroupId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param number index
         * @param mobsya.fb.EventDescription= obj
         * @returns mobsya.fb.EventDescription
         */
        events(index: number, obj?: mobsya.fb.EventDescription): mobsya.fb.EventDescription | null;
        /**
         * @returns number
         */
        eventsLength(): number;
        /**
         * @param flatbuffers.Builder builder
         */
        static startRegisterEvents(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeOrGroupIdOffset
         */
        static addNodeOrGroupId(builder: flatbuffers.Builder, nodeOrGroupIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset eventsOffset
         */
        static addEvents(builder: flatbuffers.Builder, eventsOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createEventsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startEventsVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endRegisterEvents(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createRegisterEvents(builder: flatbuffers.Builder, requestId: number, nodeOrGroupIdOffset: flatbuffers.Offset, eventsOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class EventsDescriptionsChanged {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns EventsDescriptionsChanged
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): EventsDescriptionsChanged;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param EventsDescriptionsChanged= obj
         * @returns EventsDescriptionsChanged
         */
        static getRootAsEventsDescriptionsChanged(bb: flatbuffers.ByteBuffer, obj?: EventsDescriptionsChanged): EventsDescriptionsChanged;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeOrGroupId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param number index
         * @param mobsya.fb.EventDescription= obj
         * @returns mobsya.fb.EventDescription
         */
        events(index: number, obj?: mobsya.fb.EventDescription): mobsya.fb.EventDescription | null;
        /**
         * @returns number
         */
        eventsLength(): number;
        /**
         * @param flatbuffers.Builder builder
         */
        static startEventsDescriptionsChanged(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeOrGroupIdOffset
         */
        static addNodeOrGroupId(builder: flatbuffers.Builder, nodeOrGroupIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset eventsOffset
         */
        static addEvents(builder: flatbuffers.Builder, eventsOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createEventsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startEventsVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endEventsDescriptionsChanged(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createEventsDescriptionsChanged(builder: flatbuffers.Builder, nodeOrGroupIdOffset: flatbuffers.Offset, eventsOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class ScratchpadUpdate {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns ScratchpadUpdate
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): ScratchpadUpdate;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param ScratchpadUpdate= obj
         * @returns ScratchpadUpdate
         */
        static getRootAsScratchpadUpdate(bb: flatbuffers.ByteBuffer, obj?: ScratchpadUpdate): ScratchpadUpdate;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        scratchpadId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        groupId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @returns mobsya.fb.ProgrammingLanguage
         */
        language(): mobsya.fb.ProgrammingLanguage;
        /**
         * @param mobsya.fb.ProgrammingLanguage value
         * @returns boolean
         */
        mutate_language(value: mobsya.fb.ProgrammingLanguage): boolean;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        text(): string | null;
        text(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @param flatbuffers.Encoding= optionalEncoding
         * @returns string|Uint8Array|null
         */
        name(): string | null;
        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
        /**
         * @returns boolean
         */
        deleted(): boolean;
        /**
         * @param boolean value
         * @returns boolean
         */
        mutate_deleted(value: boolean): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startScratchpadUpdate(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset scratchpadIdOffset
         */
        static addScratchpadId(builder: flatbuffers.Builder, scratchpadIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset groupIdOffset
         */
        static addGroupId(builder: flatbuffers.Builder, groupIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param mobsya.fb.ProgrammingLanguage language
         */
        static addLanguage(builder: flatbuffers.Builder, language: mobsya.fb.ProgrammingLanguage): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset textOffset
         */
        static addText(builder: flatbuffers.Builder, textOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nameOffset
         */
        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param boolean deleted
         */
        static addDeleted(builder: flatbuffers.Builder, deleted: boolean): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endScratchpadUpdate(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createScratchpadUpdate(builder: flatbuffers.Builder, requestId: number, scratchpadIdOffset: flatbuffers.Offset, groupIdOffset: flatbuffers.Offset, nodeIdOffset: flatbuffers.Offset, language: mobsya.fb.ProgrammingLanguage, textOffset: flatbuffers.Offset, nameOffset: flatbuffers.Offset, deleted: boolean): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class FirmwareUpgradeRequest {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns FirmwareUpgradeRequest
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): FirmwareUpgradeRequest;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param FirmwareUpgradeRequest= obj
         * @returns FirmwareUpgradeRequest
         */
        static getRootAsFirmwareUpgradeRequest(bb: flatbuffers.ByteBuffer, obj?: FirmwareUpgradeRequest): FirmwareUpgradeRequest;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param flatbuffers.Builder builder
         */
        static startFirmwareUpgradeRequest(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endFirmwareUpgradeRequest(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createFirmwareUpgradeRequest(builder: flatbuffers.Builder, requestId: number, nodeIdOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class FirmwareUpgradeStatus {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns FirmwareUpgradeStatus
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): FirmwareUpgradeStatus;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param FirmwareUpgradeStatus= obj
         * @returns FirmwareUpgradeStatus
         */
        static getRootAsFirmwareUpgradeStatus(bb: flatbuffers.ByteBuffer, obj?: FirmwareUpgradeStatus): FirmwareUpgradeStatus;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @returns number
         */
        progress(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_progress(value: number): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startFirmwareUpgradeStatus(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number progress
         */
        static addProgress(builder: flatbuffers.Builder, progress: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endFirmwareUpgradeStatus(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createFirmwareUpgradeStatus(builder: flatbuffers.Builder, requestId: number, nodeIdOffset: flatbuffers.Offset, progress: number): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class Thymio2WirelessDongle {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Thymio2WirelessDongle
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Thymio2WirelessDongle;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Thymio2WirelessDongle= obj
         * @returns Thymio2WirelessDongle
         */
        static getRootAsThymio2WirelessDongle(bb: flatbuffers.ByteBuffer, obj?: Thymio2WirelessDongle): Thymio2WirelessDongle;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        dongleId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @returns number
         */
        dongleNode(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_dongle_node(value: number): boolean;
        /**
         * @returns number
         */
        networkId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_network_id(value: number): boolean;
        /**
         * @returns number
         */
        channelId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_channel_id(value: number): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startThymio2WirelessDongle(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset dongleIdOffset
         */
        static addDongleId(builder: flatbuffers.Builder, dongleIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number dongleNode
         */
        static addDongleNode(builder: flatbuffers.Builder, dongleNode: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number networkId
         */
        static addNetworkId(builder: flatbuffers.Builder, networkId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number channelId
         */
        static addChannelId(builder: flatbuffers.Builder, channelId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endThymio2WirelessDongle(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createThymio2WirelessDongle(builder: flatbuffers.Builder, dongleIdOffset: flatbuffers.Offset, dongleNode: number, networkId: number, channelId: number): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class EnableThymio2PairingMode {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns EnableThymio2PairingMode
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): EnableThymio2PairingMode;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param EnableThymio2PairingMode= obj
         * @returns EnableThymio2PairingMode
         */
        static getRootAsEnableThymio2PairingMode(bb: flatbuffers.ByteBuffer, obj?: EnableThymio2PairingMode): EnableThymio2PairingMode;
        /**
         * @returns boolean
         */
        enable(): boolean;
        /**
         * @param boolean value
         * @returns boolean
         */
        mutate_enable(value: boolean): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startEnableThymio2PairingMode(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param boolean enable
         */
        static addEnable(builder: flatbuffers.Builder, enable: boolean): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endEnableThymio2PairingMode(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createEnableThymio2PairingMode(builder: flatbuffers.Builder, enable: boolean): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class Thymio2WirelessDonglesChanged {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Thymio2WirelessDonglesChanged
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Thymio2WirelessDonglesChanged;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Thymio2WirelessDonglesChanged= obj
         * @returns Thymio2WirelessDonglesChanged
         */
        static getRootAsThymio2WirelessDonglesChanged(bb: flatbuffers.ByteBuffer, obj?: Thymio2WirelessDonglesChanged): Thymio2WirelessDonglesChanged;
        /**
         * @param number index
         * @param mobsya.fb.Thymio2WirelessDongle= obj
         * @returns mobsya.fb.Thymio2WirelessDongle
         */
        dongles(index: number, obj?: mobsya.fb.Thymio2WirelessDongle): mobsya.fb.Thymio2WirelessDongle | null;
        /**
         * @returns number
         */
        donglesLength(): number;
        /**
         * @param flatbuffers.Builder builder
         */
        static startThymio2WirelessDonglesChanged(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset donglesOffset
         */
        static addDongles(builder: flatbuffers.Builder, donglesOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createDonglesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startDonglesVector(builder: flatbuffers.Builder, numElems: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endThymio2WirelessDonglesChanged(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createThymio2WirelessDonglesChanged(builder: flatbuffers.Builder, donglesOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class Thymio2WirelessDonglePairingRequest {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Thymio2WirelessDonglePairingRequest
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Thymio2WirelessDonglePairingRequest;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Thymio2WirelessDonglePairingRequest= obj
         * @returns Thymio2WirelessDonglePairingRequest
         */
        static getRootAsThymio2WirelessDonglePairingRequest(bb: flatbuffers.ByteBuffer, obj?: Thymio2WirelessDonglePairingRequest): Thymio2WirelessDonglePairingRequest;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        dongleId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @param mobsya.fb.NodeId= obj
         * @returns mobsya.fb.NodeId|null
         */
        nodeId(obj?: mobsya.fb.NodeId): mobsya.fb.NodeId | null;
        /**
         * @returns number
         */
        networkId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_network_id(value: number): boolean;
        /**
         * @returns number
         */
        channelId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_channel_id(value: number): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startThymio2WirelessDonglePairingRequest(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset dongleIdOffset
         */
        static addDongleId(builder: flatbuffers.Builder, dongleIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nodeIdOffset
         */
        static addNodeId(builder: flatbuffers.Builder, nodeIdOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number networkId
         */
        static addNetworkId(builder: flatbuffers.Builder, networkId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number channelId
         */
        static addChannelId(builder: flatbuffers.Builder, channelId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endThymio2WirelessDonglePairingRequest(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createThymio2WirelessDonglePairingRequest(builder: flatbuffers.Builder, requestId: number, dongleIdOffset: flatbuffers.Offset, nodeIdOffset: flatbuffers.Offset, networkId: number, channelId: number): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class Thymio2WirelessDonglePairingResponse {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Thymio2WirelessDonglePairingResponse
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Thymio2WirelessDonglePairingResponse;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Thymio2WirelessDonglePairingResponse= obj
         * @returns Thymio2WirelessDonglePairingResponse
         */
        static getRootAsThymio2WirelessDonglePairingResponse(bb: flatbuffers.ByteBuffer, obj?: Thymio2WirelessDonglePairingResponse): Thymio2WirelessDonglePairingResponse;
        /**
         * @returns number
         */
        requestId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_request_id(value: number): boolean;
        /**
         * @returns number
         */
        networkId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_network_id(value: number): boolean;
        /**
         * @returns number
         */
        channelId(): number;
        /**
         * @param number value
         * @returns boolean
         */
        mutate_channel_id(value: number): boolean;
        /**
         * @param flatbuffers.Builder builder
         */
        static startThymio2WirelessDonglePairingResponse(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number requestId
         */
        static addRequestId(builder: flatbuffers.Builder, requestId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number networkId
         */
        static addNetworkId(builder: flatbuffers.Builder, networkId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @param number channelId
         */
        static addChannelId(builder: flatbuffers.Builder, channelId: number): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endThymio2WirelessDonglePairingResponse(builder: flatbuffers.Builder): flatbuffers.Offset;
        static createThymio2WirelessDonglePairingResponse(builder: flatbuffers.Builder, requestId: number, networkId: number, channelId: number): flatbuffers.Offset;
    }
}
/**
 * @constructor
 */
export declare namespace mobsya.fb {
    class Message {
        bb: flatbuffers.ByteBuffer | null;
        bb_pos: number;
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Message
         */
        __init(i: number, bb: flatbuffers.ByteBuffer): Message;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Message= obj
         * @returns Message
         */
        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message;
        /**
         * @returns mobsya.fb.AnyMessage
         */
        messageType(): mobsya.fb.AnyMessage;
        /**
         * @param mobsya.fb.AnyMessage value
         * @returns boolean
         */
        mutate_message_type(value: mobsya.fb.AnyMessage): boolean;
        /**
         * @param flatbuffers.Table obj
         * @returns ?flatbuffers.Table
         */
        message<T extends flatbuffers.Table>(obj: T): T | null;
        /**
         * @param flatbuffers.Builder builder
         */
        static startMessage(builder: flatbuffers.Builder): void;
        /**
         * @param flatbuffers.Builder builder
         * @param mobsya.fb.AnyMessage messageType
         */
        static addMessageType(builder: flatbuffers.Builder, messageType: mobsya.fb.AnyMessage): void;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset messageOffset
         */
        static addMessage(builder: flatbuffers.Builder, messageOffset: flatbuffers.Offset): void;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset offset
         */
        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset): void;
        static createMessage(builder: flatbuffers.Builder, messageType: mobsya.fb.AnyMessage, messageOffset: flatbuffers.Offset): flatbuffers.Offset;
    }
}
